import telebot
from telebot import types

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
bot = telebot.TeleBot('5761676599:AAHjLEChmM_3dkylEM3xJsfJG88dAMCra40')

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Ä–µ—Ü–µ–Ω–∑–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
reviews = []

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    markup = get_menu_keyboard()
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö–Ω–∏–∂–Ω–æ–≥–æ —Ä–µ—Ü–µ–Ω–∑–µ–Ω—Ç–∞! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def get_menu_keyboard():
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text="–ú–æ–∏ —Ä–µ—Ü–µ–Ω–∑–∏–∏", callback_data="my_reviews:0"))
    keyboard.add(types.InlineKeyboardButton(text="–ù–æ–≤–∞—è —Ä–µ—Ü–µ–Ω–∑–∏—è", callback_data="add_review_title"))
    return keyboard

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def button_handler(call):
    if call.data.startswith("my_reviews"):
        page = int(call.data.split(":")[1])
        my_reviews(call.message.chat.id, page)
    elif call.data == "add_review_title":
        add_review_title(call.message.chat.id)
    elif call.data.startswith("delete_review"):
        delete_review(call.message.chat.id, call.data.split(":")[1])
    elif call.data.startswith("skip_review"):
        skip_review_step(call.message.chat.id, call.data.split(":")[1])

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "–ú–æ–∏ —Ä–µ—Ü–µ–Ω–∑–∏–∏"
def my_reviews(chat_id, page):
    num_reviews = len(reviews)
    start_index = page * 4
    end_index = min(start_index + 4, num_reviews)
    
    if num_reviews == 0:
        bot.send_message(chat_id, "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ä–µ—Ü–µ–Ω–∑–∏–π.")
        return
    
    for index in range(start_index, end_index):
        review = reviews[index]
        markup = get_review_keyboard(index)
        bot.send_message(chat_id, format_review(review), reply_markup=markup)
    
    if end_index < num_reviews:
        markup = get_next_page_keyboard(page + 1)
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–µ—Ü–µ–Ω–∑–∏–∏
def get_review_keyboard(review_index):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_review:{review_index}"))
    return keyboard

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–µ—Ü–µ–Ω–∑–∏–π
def get_next_page_keyboard(page):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text="–î–∞–ª–µ–µ", callback_data=f"my_reviews:{page}"))
    return keyboard

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "–ù–æ–≤–∞—è —Ä–µ—Ü–µ–Ω–∑–∏—è"
def add_review_title(chat_id):
    msg = bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏:")
    bot.register_next_step_handler(msg, add_review_author)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–Ω–∏–≥–∏
def add_review_author(message):
    review = {'title': message.text}
    reviews.append(review)
    chat_id = message.chat.id
    msg = bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∞ –∫–Ω–∏–≥–∏:")
    bot.register_next_step_handler(msg, add_review_comment)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∞–≤—Ç–æ—Ä–∞ –∫–Ω–∏–≥–∏
def add_review_comment(message):
    review = reviews[-1]
    review['author'] = message.text
    chat_id = message.chat.id
    msg = bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∫–Ω–∏–≥–µ:")
    bot.register_next_step_handler(msg, add_review_rating)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∫ –∫–Ω–∏–≥–µ
def add_review_rating(message):
    review = reviews[-1]
    review['comment'] = message.text
    chat_id = message.chat.id
    msg = bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –æ—Ü–µ–Ω–∫—É –æ—Ç 1 –¥–æ 10 (–∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ –ø–æ–ª–µ):")
    bot.register_next_step_handler(msg, validate_review_rating)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –æ—Ü–µ–Ω–∫–∏ –∫–Ω–∏–≥–∏
def validate_review_rating(message):
    review = reviews[-1]
    rating = message.text.strip()
    
    if rating.isdigit() and 1 <= int(rating) <= 10:
        review['rating'] = int(rating)
        chat_id = message.chat.id
        msg = bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ç–∞—Ç—É –∏–∑ –∫–Ω–∏–≥–∏ (–∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ –ø–æ–ª–µ):")
        bot.register_next_step_handler(msg, finish_adding_review)
    else:
        chat_id = message.chat.id
        msg = bot.send_message(chat_id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ—Ü–µ–Ω–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ—Ü–µ–Ω–∫—É –æ—Ç 1 –¥–æ 10:")
        bot.register_next_step_handler(msg, validate_review_rating)

# –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Ü–µ–Ω–∑–∏–∏
def finish_adding_review(message):
    review = reviews[-1]
    review['quote'] = message.text
    chat_id = message.chat.id
    bot.send_message(chat_id, "–†–µ—Ü–µ–Ω–∑–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
    markup = get_menu_keyboard()
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

# –£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ—Ü–µ–Ω–∑–∏–∏
def delete_review(chat_id, review_index):
    index = int(review_index)
    if index >= 0 and index < len(reviews):
        del reviews[index]
        bot.send_message(chat_id, "–†–µ—Ü–µ–Ω–∑–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.")
    else:
        bot.send_message(chat_id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ä–µ—Ü–µ–Ω–∑–∏–∏.")

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–Ω–∑–∏–∏
def format_review(review):
    title = f"üìñ –ù–∞–∑–≤–∞–Ω–∏–µ: {review['title']}"
    author = f"üë§ –ê–≤—Ç–æ—Ä: {review['author']}"
    comment = f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {review['comment']}"
    
    rating = review.get('rating')
    rating_text = f"‚≠ê –û—Ü–µ–Ω–∫–∞: {rating}" if rating else "‚≠ê –û—Ü–µ–Ω–∫–∞: –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
    
    quote = review.get('quote')
    quote_text = f"üîñ –¶–∏—Ç–∞—Ç–∞: {quote}" if quote else "üîñ –¶–∏—Ç–∞—Ç–∞: –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
    
    return f"{title}\n{author}\n{comment}\n{rating_text}\n{quote_text}"

# –ü—Ä–æ–ø—É—Å–∫ —à–∞–≥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Ü–µ–Ω–∑–∏–∏
def skip_review_step(chat_id, step):
    if step == "rating":
        review = reviews[-1]
        review['rating'] = None
        chat_id = message.chat.id
        msg = bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ç–∞—Ç—É –∏–∑ –∫–Ω–∏–≥–∏ (–∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ –ø–æ–ª–µ):")
        bot.register_next_step_handler(msg, finish_adding_review)
    elif step == "quote":
        review = reviews[-1]
        review['quote'] = None
        chat_id = message.chat.id
        bot.send_message(chat_id, "–†–µ—Ü–µ–Ω–∑–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
        markup = get_menu_keyboard()
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
